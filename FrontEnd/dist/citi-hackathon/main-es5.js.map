{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/analytics/analytics.component.html","webpack:///src/app/analytics/analytics.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.config.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/error-dialog/error-dialog.component.html","webpack:///src/app/error-dialog/error-dialog.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/lib-modules/material.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AnalyticsComponent","_route","_appService","queryParamMap","subscribe","params","paramObject","getDataForDateRange","startDate","endDate","payload","getDataForRange","response","console","log","routes","path","component","AppRoutingModule","AppComponent","title","protocol","location","host","URL_CONFIG","BASE_URL","getConfigs","GET_ALL_DATA","GET_DATA_FOR_RANGE","ADMIN_ICON","AppModule","httpOptions","headers","AppService","http","get","data","post","ErrorDialogComponent","mainData","HomeComponent","dialog","_router","range","start","end","value","showErrorMessage","toLocaleDateString","navigate","queryParams","getAllData","errMsg","open","message","MaterialModule","environment","production","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<p>analytics works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppService } from '../app.service';\n\n@Component({\n  selector: 'app-analytics',\n  templateUrl: './analytics.component.html',\n  styleUrls: ['./analytics.component.scss'],\n})\nexport class AnalyticsComponent implements OnInit {\n  constructor(private _route: ActivatedRoute, private _appService: AppService) {\n    this._route.queryParamMap.subscribe((params) => {\n      let paramObject = { ...params.keys, ...params };\n      if (\n        paramObject['params']['startDate'] &&\n        paramObject['params']['endDate']\n      ) {\n        this.getDataForDateRange(\n          paramObject['params']['startDate'],\n          paramObject['params']['endDate']\n        );\n      }\n    });\n  }\n\n  ngOnInit(): void {}\n\n  getDataForDateRange(startDate, endDate) {\n    let payload = {\n      startDate: startDate,\n      endDate: endDate,\n    };\n    this._appService.getDataForRange(payload).subscribe((response) => {\n      console.log(response);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AnalyticsComponent } from './analytics/analytics.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'analytics', component: AnalyticsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","<router-outlet></router-outlet>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'CITI Hackathon';\n}\n","let protocol = location.protocol + '//' + location.host;\n\nexport var URL_CONFIG = {\n  BASE_URL: getConfigs()['BASE_URL'],\n  GET_ALL_DATA: ':8080/get-all-data',\n  GET_DATA_FOR_RANGE: ':8080/get-data-for-range',\n};\n\nexport function getConfigs() {\n  if (protocol == 'http://localhost:4200') {\n    return {\n      BASE_URL: 'http://localhost',\n      ADMIN_ICON: '../assets/admin.png',\n    };\n  } else {\n    return {\n      BASE_URL: '',\n      ADMIN_ICON: '../assets/admin.png',\n    };\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AnalyticsComponent } from './analytics/analytics.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './lib-modules/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ErrorDialogComponent } from './error-dialog/error-dialog.component';\nimport { AppService } from './app.service';\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AnalyticsComponent,\n    ErrorDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  entryComponents: [ErrorDialogComponent],\n  providers: [AppService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { URL_CONFIG } from './app.config';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};\n@Injectable()\nexport class AppService {\n  constructor(private http: HttpClient) {\n  }\n  \n  getAllData() {\n    return this.http.get<any>(URL_CONFIG.BASE_URL + URL_CONFIG.GET_ALL_DATA);\n  }\n\n  getDataForRange(data) {\n    return this.http.post<any>(\n      URL_CONFIG.BASE_URL + URL_CONFIG.GET_DATA_FOR_RANGE,\n      data,\n      \n    );\n  }\n}\n","<h1 mat-dialog-title>Message</h1>\n<div mat-dialog-content>\n  {{data.message}}\n</div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  message: 'Error Message';\n}\n@Component({\n  selector: 'app-error-dialog',\n  templateUrl: './error-dialog.component.html',\n  styleUrls: ['./error-dialog.component.scss'],\n})\nexport class ErrorDialogComponent implements OnInit {\n  mainData: DialogData;\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    this.mainData = data;\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"home-container\">\n  <div class=\"block-1\">\n    <p>CITI Hackathon: Macro-Trend Detector</p>\n  </div>\n  <div class=\"block-2\">\n    <div class=\"image-container\">\n      <img src=\"../../assets/landing-bg-2.png\" alt=\"landing-page-cover\" />\n    </div>\n    <div class=\"ip-container\">\n      <div class=\"date-picker-container\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Enter a date range</mat-label>\n          <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n            <input\n              matStartDate\n              formControlName=\"start\"\n              placeholder=\"Start date\"\n            />\n            <input matEndDate formControlName=\"end\" placeholder=\"End date\" />\n          </mat-date-range-input>\n          <mat-datepicker-toggle\n            matSuffix\n            [for]=\"picker\"\n          ></mat-datepicker-toggle>\n          <mat-date-range-picker #picker></mat-date-range-picker>\n\n          <mat-error\n            *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\"\n            >Invalid start date</mat-error\n          >\n          <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\"\n            >Invalid end date</mat-error\n          >\n        </mat-form-field>\n      </div>\n      <div class=\"button-container\">\n        <button (click)=\"onClickSearchBtn()\">Search TRENDS!</button>\n      </div>\n      <div class=\"prev-container\">\n        <span (click)=\"onClickCheckPreviousTrends()\">\n          Check previous trends\n        </span>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AppService } from '../app.service';\nimport { ErrorDialogComponent } from '../error-dialog/error-dialog.component';\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  range = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n  constructor(\n    public dialog: MatDialog,\n    private _appService: AppService,\n    private _router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  onClickSearchBtn(): void {\n    if (!this.range.value['start'] || !this.range.value['end']) {\n      this.showErrorMessage('Invalid date selection!');\n      return;\n    }\n    let startDate = this.range.value['start'].toLocaleDateString('en-CA');\n    let endDate = this.range.value['end'].toLocaleDateString('en-CA');\n\n    this._router.navigate(['/analytics'], {\n      queryParams: { startDate: startDate, endDate: endDate },\n    });\n  }\n\n  onClickCheckPreviousTrends(): void {\n    this._appService.getAllData().subscribe((response) => {\n      if (response) {\n        this._router.navigate(['/analytics']);\n      } else {\n        this.showErrorMessage('Something went wrong. Please try again later!');\n      }\n    });\n  }\n\n  showErrorMessage(errMsg) {\n    this.dialog.open(ErrorDialogComponent, {\n      data: {\n        message: errMsg,\n      },\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ],\n})\nexport class MaterialModule {}\n\n/**  Copyright 2020 Google LLC. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}